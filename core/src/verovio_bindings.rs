/* automatically generated by rust-bindgen */

pub const __bool_true_false_are_defined: u32 = 1;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub type Toolkit = ::std::os::raw::c_void;
extern "C" {
    /// Methods exported a functions to use the Toolkit class
    pub fn enableLog(value: bool);
}
extern "C" {
    pub fn enableLogToBuffer(value: bool);
}
extern "C" {
    pub fn vrvToolkit_constructor() -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn vrvToolkit_constructorResourcePath(
        resourcePath: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn vrvToolkit_destructor(tkPtr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn vrvToolkit_edit(
        tkPtr: *mut ::std::os::raw::c_void,
        editorAction: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_editInfo(tkPtr: *mut ::std::os::raw::c_void)
        -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getAvailableOptions(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getDefaultOptions(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getDescriptiveFeatures(
        tkPtr: *mut ::std::os::raw::c_void,
        options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getElementAttr(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getElementsAtTime(
        tkPtr: *mut ::std::os::raw::c_void,
        millisec: ::std::os::raw::c_int,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getExpansionIdsForElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getHumdrum(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getHumdrumFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_getID(tkPtr: *mut ::std::os::raw::c_void) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_convertHumdrumToHumdrum(
        tkPtr: *mut ::std::os::raw::c_void,
        humdrumData: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_convertHumdrumToMIDI(
        tkPtr: *mut ::std::os::raw::c_void,
        humdrumData: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_convertMEIToHumdrum(
        tkPtr: *mut ::std::os::raw::c_void,
        meiData: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getLog(tkPtr: *mut ::std::os::raw::c_void) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getMEI(
        tkPtr: *mut ::std::os::raw::c_void,
        options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getMIDIValuesForElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getNotatedIdForElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getOptions(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getOptionUsageString(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getPageCount(tkPtr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vrvToolkit_getPageWithElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vrvToolkit_getResourcePath(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getScale(tkPtr: *mut ::std::os::raw::c_void) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn vrvToolkit_getTimeForElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> f64;
}
extern "C" {
    pub fn vrvToolkit_getTimesForElement(
        tkPtr: *mut ::std::os::raw::c_void,
        xmlId: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_getVersion(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_loadData(
        tkPtr: *mut ::std::os::raw::c_void,
        data: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_loadFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_loadZipDataBase64(
        tkPtr: *mut ::std::os::raw::c_void,
        data: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_loadZipDataBuffer(
        tkPtr: *mut ::std::os::raw::c_void,
        data: *const ::std::os::raw::c_uchar,
        length: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_redoLayout(
        tkPtr: *mut ::std::os::raw::c_void,
        c_options: *const ::std::os::raw::c_char,
    );
}
extern "C" {
    pub fn vrvToolkit_redoPagePitchPosLayout(tkPtr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn vrvToolkit_renderData(
        tkPtr: *mut ::std::os::raw::c_void,
        data: *const ::std::os::raw::c_char,
        options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToExpansionMap(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToExpansionMapFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_renderToMIDI(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToMIDIFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_renderToPAE(
        tkPtr: *mut ::std::os::raw::c_void,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToPAEFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_renderToSVG(
        tkPtr: *mut ::std::os::raw::c_void,
        page_no: ::std::os::raw::c_int,
        xmlDeclaration: bool,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToSVGFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
        pageNo: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_renderToTimemap(
        tkPtr: *mut ::std::os::raw::c_void,
        c_options: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_renderToTimemapFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
        c_options: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_resetOptions(tkPtr: *mut ::std::os::raw::c_void);
}
extern "C" {
    pub fn vrvToolkit_resetXmlIdSeed(
        tkPtr: *mut ::std::os::raw::c_void,
        seed: ::std::os::raw::c_int,
    );
}
extern "C" {
    pub fn vrvToolkit_saveFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
        c_options: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_select(
        tkPtr: *mut ::std::os::raw::c_void,
        selection: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_setInputFrom(
        tkPtr: *mut ::std::os::raw::c_void,
        inputFrom: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_setOptions(
        tkPtr: *mut ::std::os::raw::c_void,
        options: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_setOutputTo(
        tkPtr: *mut ::std::os::raw::c_void,
        outputTo: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_setResourcePath(
        tkPtr: *mut ::std::os::raw::c_void,
        path: *const ::std::os::raw::c_char,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_setScale(
        tkPtr: *mut ::std::os::raw::c_void,
        scale: ::std::os::raw::c_int,
    ) -> bool;
}
extern "C" {
    pub fn vrvToolkit_validatePAE(
        tkPtr: *mut ::std::os::raw::c_void,
        data: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn vrvToolkit_validatePAEFile(
        tkPtr: *mut ::std::os::raw::c_void,
        filename: *const ::std::os::raw::c_char,
    ) -> *const ::std::os::raw::c_char;
}
